public class Demo1 {
public void CreateAccount(String Name, String Phone)
{
account acc = new account();
acc.Name = Name;
acc.Phone = Phone;
insert acc;
System.debug('Account has been inserted: ' + acc.name);
}

}
Demo1 acc = new Demo1();
acc.CreateAccount('Prachi', '23456778');

public class Demo2 {
public void UpdateOlderAccount(String Name){
List<Account> oldAccounts = new List<Account>();
for(Account acc: [SELECT Name from Account WHERE Phone = '7020278909'])
{
acc.Name = Name;
oldAccounts.add(acc);
System.debug('Account has been updated' + acc.name);
}
update oldAccounts;

}

}

Demo2 acc = new Demo2();
acc.UpdateOlderAccount('Sakshi');

public class Demo3 {
public void DeleteAccount()
{
List<Account> oldAccounts = new List<Account>();
for(Account acc:[select Name, Phone from Account where Name='Sakshi'] )
{
delete acc;
System.debug('Account deleted: ' +acc.name);

}
update oldAccounts;
}
}


Demo3 acc = new Demo3();
acc.DeleteAccount();



ass 4: apx
public class CreateAccount
{
public String name {get; set;}
public String phoneNumber {get; set;}
public String selectedname {get; set;}
public String websiteURL {get; set;}
public List<Selectoption> lstnamesel {get; set;}
public CreateAccount(ApexPages.StandardController controller)
{
lstnamesel = new List<selectoption>();
lstnamesel.add(new selectOption('','- None -'));
lstnamesel.add(new selectOption('IT','IT'));
lstnamesel.add(new selectOption('MECH','MECH'));
lstnamesel.add(new selectOption('CHEM','CHEM'));
lstnamesel.add(new selectOption('PHARMA','PHARMA'));
}
public PageReference createAccount()
{
System.debug('teset create');
if(!String.isEmpty(name))
{
Account accountRecord = new Account(Name = name,
Phone = phoneNumber,
Industry = selectedname,
Website = websiteURL);
INSERT accountRecord;
PageReference pg = new PageReference('/'+accountRecord.Id);
pg.setRedirect(true);
return pg;
}
else
{
ApexPages.addmessage(new ApexPages.message(ApexPages.severity.CONFIRM,'Please enter Account Name'));
}
return NULL;
}
public PageReference cancelAccount()
{
PageReference pg = new PageReference('/'+Schema.SObjectType.Account.getKeyPrefix()+'/o');
return pg;
}
}

ass 4: visual
<apex:page standardController="Account" extensions="CreateAccount">
<apex:form id="apexFrom" >
<apex:pageBlock title="Create Account:" id="pageBlockId">
<apex:pageMessages id="showmsg"></apex:pageMessages>
<apex:pageBlockSection columns="2" >
<!--<div class = "requiredInput">
<div class = "requiredBlock"></div>
<apex:inputText value="{!name}" label="Account Name" required="true"/>
</div>-->
<apex:inputText value="{!name}" label="Account Name" required="true"/>
<apex:inputText value="{!phoneNumber}" label="Phone" />
<apex:selectList size="1" value="{!selectedname}" label="Industry">
<apex:selectOptions value="{!lstnamesel}"/>
</apex:selectList>
<apex:inputText value="{!websiteURL}" label="Website" />
</apex:pageBlockSection>
<apex:pageBlockButtons >
<apex:commandButton action="{!createAccount}" value="Save"/>
<apex:commandButton action="{!cancelAccount}" value="Cancel"/>
</apex:pageBlockButtons>
</apex:pageBlock>
<!-- ACTION FUNCTIONS-->
<apex:actionFunction name="createFunction" action="{!createAccount}"/>
<apex:actionFunction name="cancelFunction" action="{!cancelAccount}"/>
</apex:form>
</apex:page>